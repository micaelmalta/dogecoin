name: Continuous Integration

on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'contrib/**'
      - '**/*.md'

jobs:
  build:
    name: ${{ matrix.name }}

    env:
      MAKEJOBS: "-j3"
      CHECK_DOC: "0"
      CCACHE_SIZE: "100M"
      CCACHE_TEMPDIR: /tmp/.ccache-temp
      CCACHE_COMPRESS: "1"
      PYTHON_DEBUG: "1"
      WINEDEBUG: fixme-all
      SDK_URL: https://bitcoincore.org/depends-sources/sdks

    strategy:
      fail-fast: false
      matrix:
        name:
          - macos10.15
          - macos11
        include:
          - name: macos10.15
            host: x86_64-apple-darwin
            os: macos-10.15
            run-tests: false
            dep-opts: ""
            config-opts: "--enable-gui --enable-reduce-exports"
            goal: deploy
            prerequisite-environment-variables: ['CPATH=`xcrun --show-sdk-path`/usr/include','LIBRARY_PATH="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib:/opt/local/lib"']
            depends-environment-variables: [ 'BDB_PREFIX="/usr/local/BerkeleyDB.5.1"','BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx"','BDB_CFLAGS="-I${BDB_PREFIX}/include"' ]
            brew-packages: "autoconf automake libtool miniupnpc openssl pkg-config protobuf qt5 zeromq qrencode librsvg"
          - name: macos11
            host: x86_64-apple-darwin
            os: macos-11
            run-tests: false
            dep-opts: ""
            config-opts: "--enable-gui --enable-reduce-exports"
            goal: deploy
            prerequisite-environment-variables: ['CPATH=`xcrun --show-sdk-path`/usr/include','LIBRARY_PATH="/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib:/opt/local/lib"']
            depends-environment-variables: ['BDB_PREFIX="/usr/local/BerkeleyDB.5.1"','BDB_LIBS="-L${BDB_PREFIX}/lib -ldb_cxx"','BDB_CFLAGS="-I${BDB_PREFIX}/include"']
            brew-packages: "autoconf automake libtool miniupnpc openssl pkg-config protobuf qt5 zeromq qrencode librsvg"


    runs-on: ${{ matrix.os }}

    steps:
      - name: Prerequisite environment variable
        if: ${{ matrix.prerequisite-environment-variables }}
        run: |
          export ${{ matrix.environment-variable }}
        with:
          environment-variable: ${{ matrix.prerequisite-environment-variables}}
      - name: Add architecture
        if: ${{ matrix.arch }}
        run: |
          sudo dpkg --add-architecture "${{ matrix.arch }}"

      - name: Install packages
        if: ${{ matrix.packages }}
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps bison
          sudo apt-get install ${{ matrix.packages }}

      - name: BREW packages
        if: ${{ matrix.brew-packages }}
        run: |
          brew install ${{ matrix.brew-packages }}

      - name: Post install
        if: ${{ matrix.postinstall }}
        run: ${{ matrix.postinstall }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: SDK cache
        if: ${{ matrix.sdk }}
        uses: actions/cache@v2
        env:
          cache-name: sdk
        with:
          path: ./depends/sdk-sources
          key: ${{ matrix.name }}-${{ env.cache-name }}

      - name: Install SDK
        if: ${{ matrix.sdk }}
        run: |
          mkdir -p ./depends/sdk-sources
          mkdir -p ./depends/SDKs
          curl --location --fail $SDK_URL/MacOSX${{ matrix.sdk }}.sdk.tar.gz -o depends/sdk-sources/MacOSX${{ matrix.sdk }}.sdk.tar.gz
          tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${{ matrix.sdk }}.sdk.tar.gz

      - name: Dependency cache
        uses: actions/cache@v2
        env:
          cache-name: depends
        with:
          path: ./depends/built
          key: ${{ matrix.name }}-${{ env.cache-name }}-${{ hashFiles('depends/packages/*') }}

      - name: Build depends
        run: |
          make $MAKEJOBS -C depends HOST=${{ matrix.host }} ${{ matrix.dep-opts }}

      - name: Export environment variable
        if: ${{ matrix.depends-environment-variables }}
        run: |
          export ${{ matrix.environment-variable }}
        with:
          environment-variable: ${{ matrix.depends-environment-variables}}

      - name: CCache
        uses: actions/cache@v2
        env:
          cache-name: ccache
        with:
          path: ~/.ccache
          key: ${{ matrix.name }}-${{ env.cache-name }}-${{ hashFiles('**/configure.ac') }}

      - name: Build Dogecoin
        run: |
          depends/${{ matrix.host }}/native/bin/ccache --max-size=$CCACHE_SIZE
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/${{ matrix.host }} ${{ matrix.config-opts }} || ( cat config.log && false)
          make $MAKEJOBS ${{ matrix.goal }} || ( echo "Build failure. Verbose build follows." && make ${{ matrix.goal }} V=1 ; false )

      - name: Run tests
        if: ${{ matrix.run-tests }}
        run: |
          make check $MAKEJOBS VERBOSE=1
          qa/pull-tester/install-deps.sh
          qa/pull-tester/rpc-tests.py --coverage

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dogecoin-${{ github.sha }}-${{ matrix.name }}
          path: |
            depends/${{ matrix.host }}/bin/dogecoin*
            dist/Dogecoin-Qt.app
